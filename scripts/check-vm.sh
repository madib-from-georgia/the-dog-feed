#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
NC='\033[0m'

echo -e "${BLUE}=== –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ VM –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è ===${NC}"
echo ""

# –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ VM
read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –≤–∞—à–µ–π VM: " VM_NAME
echo ""

echo -e "${YELLOW}üìã –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ VM...${NC}"
VM_INFO=$(yc compute instance get --name $VM_NAME --format json 2>/dev/null)

if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå VM '$VM_NAME' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ VM:"
    yc compute instance list --format table
    exit 1
fi

# –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
VM_IP=$(echo $VM_INFO | jq -r '.network_interfaces[0].primary_v4_address.one_to_one_nat.address')
VM_INTERNAL_IP=$(echo $VM_INFO | jq -r '.network_interfaces[0].primary_v4_address.address')
VM_STATUS=$(echo $VM_INFO | jq -r '.status')
VM_ZONE=$(echo $VM_INFO | jq -r '.zone_id')

echo -e "${GREEN}‚úÖ VM –Ω–∞–π–¥–µ–Ω–∞:${NC}"
echo "  –ò–º—è: $VM_NAME"
echo "  –°—Ç–∞—Ç—É—Å: $VM_STATUS"
echo "  –ó–æ–Ω–∞: $VM_ZONE"
echo "  –í–Ω–µ—à–Ω–∏–π IP: $VM_IP"
echo "  –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π IP: $VM_INTERNAL_IP"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å VM
if [ "$VM_STATUS" != "RUNNING" ]; then
    echo -e "${RED}‚ùå VM –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞! –°—Ç–∞—Ç—É—Å: $VM_STATUS${NC}"
    read -p "–ó–∞–ø—É—Å—Ç–∏—Ç—å VM? (y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        echo -e "${YELLOW}üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º VM...${NC}"
        yc compute instance start --name $VM_NAME
        echo "–ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ (30 —Å–µ–∫—É–Ω–¥)..."
        sleep 30
        VM_STATUS="RUNNING"
    else
        echo -e "${RED}VM –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è${NC}"
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É–±–ª–∏—á–Ω—ã–π IP
if [ "$VM_IP" = "null" ] || [ -z "$VM_IP" ]; then
    echo -e "${RED}‚ùå –£ VM –Ω–µ—Ç –ø—É–±–ª–∏—á–Ω–æ–≥–æ IP –∞–¥—Ä–µ—Å–∞${NC}"
    echo -e "${YELLOW}–≠—Ç–æ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö VM${NC}"
    exit 1
fi

echo -e "${BLUE}=== –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ ===${NC}"

# Ping —Ç–µ—Å—Ç
echo -n "üèì Ping —Ç–µ—Å—Ç... "
if ping -c 3 -W 3 $VM_IP >/dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ VM –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ ping${NC}"
else
    echo -e "${RED}‚ùå VM –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ ping${NC}"
    echo -e "${YELLOW}–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:${NC}"
    echo "  - –§–∞–π—Ä–≤–æ–ª –±–ª–æ–∫–∏—Ä—É–µ—Ç ICMP"
    echo "  - –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ—Ä—Ç—ã
echo ""
echo -e "${BLUE}=== –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤ ===${NC}"

check_port() {
    local port=$1
    local service=$2
    
    echo -n "üîå –ü–æ—Ä—Ç $port ($service)... "
    if timeout 5 bash -c "cat < /dev/null > /dev/tcp/$VM_IP/$port" 2>/dev/null; then
        echo -e "${GREEN}‚úÖ –û—Ç–∫—Ä—ã—Ç${NC}"
        return 0
    else
        echo -e "${RED}‚ùå –ó–∞–∫—Ä—ã—Ç${NC}"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø–æ—Ä—Ç—ã
HTTP_OPEN=$(check_port 80 "HTTP")
HTTPS_OPEN=$(check_port 443 "HTTPS")
check_port 22 "SSH"
check_port 8080 "Alt HTTP"
check_port 3000 "Node.js"
check_port 8000 "Python"

echo ""
echo -e "${BLUE}=== –¢–µ—Å—Ç 3: HTTP –ø—Ä–æ–≤–µ—Ä–∫–∞ ===${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º HTTP
echo -n "üåê HTTP –∑–∞–ø—Ä–æ—Å –∫ http://$VM_IP... "
HTTP_RESPONSE=$(curl -s -m 10 -w "STATUS:%{http_code}|TIME:%{time_total}" "http://$VM_IP" 2>/dev/null)

if [ $? -eq 0 ]; then
    STATUS=$(echo "$HTTP_RESPONSE" | grep -o "STATUS:[0-9]*" | cut -d: -f2)
    TIME=$(echo "$HTTP_RESPONSE" | grep -o "TIME:[0-9.]*" | cut -d: -f2)
    CONTENT=$(echo "$HTTP_RESPONSE" | sed 's/STATUS:[0-9]*|TIME:[0-9.]*$//')
    
    if [ "$STATUS" = "200" ]; then
        echo -e "${GREEN}‚úÖ HTTP $STATUS (${TIME}s)${NC}"
        echo -e "${GREEN}üìÑ –í–µ–±-—Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!${NC}"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        if [ ! -z "$CONTENT" ]; then
            echo -e "${YELLOW}üìã –ü–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ –æ—Ç–≤–µ—Ç–∞:${NC}"
            echo "$CONTENT" | head -3
        fi
    else
        echo -e "${YELLOW}‚ö†Ô∏è HTTP $STATUS (${TIME}s)${NC}"
        echo -e "${YELLOW}–°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ –Ω–µ HTTP 200${NC}"
    fi
else
    echo -e "${RED}‚ùå –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞${NC}"
    echo -e "${YELLOW}–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:${NC}"
    echo "  - –í–µ–±-—Å–µ—Ä–≤–µ—Ä –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    echo "  - –í–µ–±-—Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    echo "  - –§–∞–π—Ä–≤–æ–ª –±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ—Ä—Ç 80"
fi

echo ""
echo -e "${BLUE}=== –¢–µ—Å—Ç 4: GitHub Pages ===${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º GitHub Pages
echo -n "üêô GitHub Pages (https://your-domain.com)... "
GH_STATUS=$(curl -s -m 10 -w "%{http_code}" "https://your-domain.com" -o /dev/null)

if [ "$GH_STATUS" = "200" ]; then
    echo -e "${GREEN}‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ IP
    GH_CONTENT=$(curl -s -m 10 "https://your-domain.com")
    if echo "$GH_CONTENT" | grep -q "$VM_IP"; then
        echo -e "${GREEN}‚úÖ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ $VM_IP –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ $VM_IP –ù–ï –Ω–∞–π–¥–µ–Ω–æ${NC}"
    fi
else
    echo -e "${RED}‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (HTTP $GH_STATUS)${NC}"
fi

echo ""
echo -e "${BLUE}=== –¢–µ—Å—Ç 5: –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è ===${NC}"

echo -e "${YELLOW}üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é —Ü–µ–ø–æ—á–∫—É:${NC}"
echo "1. https://your-domain.com"
echo "2. ‚Üì –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"
echo "3. http://$VM_IP"
echo ""

# –°–∏–º—É–ª—è—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
echo -e "${YELLOW}–ß—Ç–æ —É–≤–∏–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:${NC}"
echo "---"

if [ "$GH_STATUS" = "200" ]; then
    echo -e "${GREEN}‚úÖ –®–∞–≥ 1: GitHub Pages –∑–∞–≥—Ä—É–∑–∏–ª—Å—è${NC}"
    
    if [ "$HTTP_OPEN" = "0" ]; then
        echo -e "${GREEN}‚úÖ –®–∞–≥ 2: VM –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ HTTP${NC}"
        echo -e "${GREEN}üéâ –£–°–ü–ï–•: –ü–æ–ª–Ω–∞—è —Ü–µ–ø–æ—á–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!${NC}"
    else
        echo -e "${RED}‚ùå –®–∞–≥ 2: VM –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ HTTP${NC}"
        echo -e "${YELLOW}–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–∏–¥–∏—Ç –æ—à–∏–±–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è${NC}"
    fi
else
    echo -e "${RED}‚ùå –®–∞–≥ 1: GitHub Pages –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
fi

echo ""
echo -e "${BLUE}=== –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ ===${NC}"

if [ "$HTTP_OPEN" != "0" ]; then
    echo -e "${YELLOW}üîß –ù—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–µ–±-—Å–µ—Ä–≤–µ—Ä:${NC}"
    echo "ssh ubuntu@$VM_IP"
    echo "sudo apt update && sudo apt install -y nginx"
    echo "sudo systemctl start nginx"
    echo ""
fi

echo -e "${YELLOW}üß™ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:${NC}"
echo "curl -I http://$VM_IP"
echo "curl -L -I https://your-domain.com"
echo "ping $VM_IP"
echo ""

echo -e "${YELLOW}üì± –¢–µ—Å—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ:${NC}"
echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ: https://your-domain.com"
echo "2. –î–æ–∂–¥–∏—Ç–µ—Å—å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è (3 —Å–µ–∫)"
echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –æ—Ç–∫—Ä—ã–ª—Å—è: http://$VM_IP"

echo ""
echo -e "${GREEN}=== –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ===${NC}"
