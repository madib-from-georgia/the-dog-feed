import { Scenes, Markup } from 'telegraf';
import { BotContext } from '../types';
import { DatabaseService } from '../services/database';
import { SCENES } from '../utils/constants';

export const notificationSettingsScene = new Scenes.BaseScene<BotContext>(
    SCENES.NOTIFICATION_SETTINGS
);

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
let globalDatabase: DatabaseService | null = null;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
export function setGlobalDatabaseForNotificationSettings(
    database: DatabaseService
) {
    globalDatabase = database;
}

// –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
notificationSettingsScene.enter(async ctx => {
    try {
        if (!globalDatabase) {
            ctx.reply(
                '–û—à–∏–±–∫–∞: –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start'
            );
            return;
        }

        const user = await globalDatabase.getUserByTelegramId(ctx.from!.id);

        if (!user) {
            ctx.reply('‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }

        const statusText = user.notificationsEnabled ? '–í–∫–ª—é—á–µ–Ω—ã' : '–í—ã–∫–ª—é—á–µ–Ω—ã';
        const statusEmoji = user.notificationsEnabled ? 'üîî' : 'üîï';

        const message =
            `${statusEmoji} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n\n` +
            `–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: ${statusText}\n\n` +
            `–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–∞—é—Ç:\n` +
            `‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏—è –æ –∫–æ—Ä–º–ª–µ–Ω–∏–∏ —Å–æ–±–∞–∫–∏\n` +
            `‚Ä¢ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è "–ü–æ—Ä–∞ –ø–æ–∫–æ—Ä–º–∏—Ç—å!"\n` +
            `‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–æ—Ä–º–∞\n` +
            `‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫—É/–≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–º–ª–µ–Ω–∏–π\n\n` +
            `–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:`;

        const keyboard = user.notificationsEnabled
            ? Markup.keyboard([
                  ['üîï –í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'],
                  ['‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é'],
              ]).resize()
            : Markup.keyboard([
                  ['üîî –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'],
                  ['‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é'],
              ]).resize();

        ctx.reply(message, keyboard);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
        ctx.reply(
            '‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
            Markup.keyboard([['üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é']]).resize()
        );
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
notificationSettingsScene.hears(/üîî –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è/, async ctx => {
    try {
        if (!globalDatabase) {
            ctx.reply('–û—à–∏–±–∫–∞: –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
            return;
        }

        const user = await globalDatabase.getUserByTelegramId(ctx.from!.id);

        if (!user) {
            ctx.reply('‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }

        await globalDatabase.updateUserNotifications(user.id, true);

        console.log(
            `–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user.username || user.telegramId}`
        );

        // –û–±–Ω–æ–≤–ª—è–µ–º —ç–∫—Ä–∞–Ω
        ctx.scene.reenter();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
        ctx.reply('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫');
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
notificationSettingsScene.hears(/üîï –í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è/, async ctx => {
    try {
        if (!globalDatabase) {
            ctx.reply('–û—à–∏–±–∫–∞: –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
            return;
        }

        const user = await globalDatabase.getUserByTelegramId(ctx.from!.id);

        if (!user) {
            ctx.reply('‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }

        await globalDatabase.updateUserNotifications(user.id, false);

        console.log(
            `–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user.username || user.telegramId}`
        );

        // –û–±–Ω–æ–≤–ª—è–µ–º —ç–∫—Ä–∞–Ω
        ctx.scene.reenter();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
        ctx.reply('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫');
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
notificationSettingsScene.hears(/‚¨ÖÔ∏è –ù–∞–∑–∞–¥/, ctx => {
    ctx.scene.enter(SCENES.SETTINGS);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞ –≥–ª–∞–≤–Ω—É—é"
notificationSettingsScene.hears(/üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é/, ctx => {
    ctx.scene.enter(SCENES.MAIN);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
notificationSettingsScene.on('text', async ctx => {
    try {
        if (!globalDatabase) {
            ctx.reply('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.');
            return;
        }

        const user = await globalDatabase.getUserByTelegramId(ctx.from!.id);

        const keyboard = user?.notificationsEnabled
            ? Markup.keyboard([
                  ['üîï –í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'],
                  ['‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é'],
              ]).resize()
            : Markup.keyboard([
                  ['üîî –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'],
                  ['‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é'],
              ]).resize();

        ctx.reply('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.', keyboard);
    } catch (error) {
        ctx.reply('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.');
    }
});
