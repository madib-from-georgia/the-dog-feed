import { Scenes, Markup } from 'telegraf';
import { BotContext, User, Feeding } from '../types';
import { DatabaseService } from '../services/database';
import { getMainKeyboard } from '../utils/keyboards';
import { MESSAGES, SCENES } from '../utils/constants';
import { formatDateTime } from '../utils/time-utils';
import { createUserLink } from '../utils/user-utils';

export const mainScene = new Scenes.BaseScene<BotContext>(SCENES.MAIN);

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä–≤–∏—Å–∞–º (–±—É–¥—É—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏–∑ bot.ts)
let globalTimerService: any = null;
let globalDatabase: DatabaseService | null = null;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
export function setGlobalServices(timerService: any, database: any) {
    globalTimerService = timerService;
    globalDatabase = database;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
export function setGlobalDatabaseForMain(database: DatabaseService) {
    globalDatabase = database;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function getOrCreateUser(
    telegramId: number,
    username?: string
): Promise<User> {
    if (!globalDatabase) {
        throw new Error('Database –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    }

    let user = await globalDatabase.getUserByTelegramId(telegramId);

    if (!user) {
        user = await globalDatabase.createUser(telegramId, username);
        console.log(`–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${username || telegramId}`);
    }

    return {
        id: user.id,
        telegramId: user.telegramId,
        username: user.username,
        notificationsEnabled: user.notificationsEnabled,
    };
}

// –í—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω—É—é —Å—Ü–µ–Ω—É
mainScene.enter(ctx => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É "–£—Ç–æ—á–Ω–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∫–æ—Ä–º–ª–µ–Ω–∏—è"
    const showFeedingDetailsButton = ctx.session?.justFed === true;

    // –û—á–∏—â–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∞ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–ª–∞—Å—å –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–∏—Ö –≤—Ö–æ–¥–∞—Ö
    if (ctx.session) {
        ctx.session.justFed = false;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –≤—Ö–æ–¥ (—á–µ—Ä–µ–∑ /start)
    if (!ctx.session?.firstVisitDone) {
        // –ü–µ—Ä–≤—ã–π –≤—Ö–æ–¥ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if (ctx.session) {
            ctx.session.firstVisitDone = true;
        }
        ctx.reply(MESSAGES.WELCOME, getMainKeyboard(showFeedingDetailsButton));
    } else {
        // –ü–æ—Å–ª–µ–¥—É—é—â–∏–µ –ø–µ—Ä–µ—Ö–æ–¥—ã - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        ctx.reply(
            '–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω',
            getMainKeyboard(showFeedingDetailsButton)
        );
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–î—Ä—É–≥–∏–µ –¥–µ–π—Å—Ç–≤–∏—è"
mainScene.hears(/–î—Ä—É–≥–∏–µ –¥–µ–π—Å—Ç–≤–∏—è/, ctx => {
    ctx.scene.enter(SCENES.OTHER_ACTIONS);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ö–æ–≥–¥–∞ —Å–ª–µ–¥—É—é—â–µ–µ –∫–æ—Ä–º–ª–µ–Ω–∏–µ?"
mainScene.hears(/–ö–æ–≥–¥–∞ —Å–ª–µ–¥—É—é—â–µ–µ –∫–æ—Ä–º–ª–µ–Ω–∏–µ\?/, async ctx => {
    try {
        if (!globalTimerService) {
            ctx.reply(
                '–û—à–∏–±–∫–∞: —Å–µ—Ä–≤–∏—Å —Ç–∞–π–º–µ—Ä–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start'
            );
            return;
        }

        const nextFeedingInfo = globalTimerService.getNextFeedingInfo();

        if (!nextFeedingInfo.isActive || !nextFeedingInfo.time) {
            ctx.reply(
                '‚èπÔ∏è –ö–æ—Ä–º–ª–µ–Ω–∏—è –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.\n–ß—Ç–æ–±—ã –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å, –Ω–∞–∂–º–∏—Ç–µ "üçΩÔ∏è –°–æ–±–∞—á–∫–∞ –ø–æ–µ–ª"'
            );
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ globalDatabase –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞
        if (!globalDatabase) {
            ctx.reply(
                '–û—à–∏–±–∫–∞: –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start'
            );
            return;
        }

        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –µ–≥–æ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
        const currentUser = await globalDatabase.getUserByTelegramId(
            ctx.from!.id
        );

        // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–æ—Ä–º–ª–µ–Ω–∏—è —Å —É—á–µ—Ç–æ–º —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const nextFeedingTime = nextFeedingInfo.time;
        const timeString = currentUser
            ? formatDateTime(nextFeedingTime, currentUser.timezone).split(
                  ' –≤ '
              )[1]
            : nextFeedingTime.getHours().toString().padStart(2, '0') +
              ':' +
              nextFeedingTime.getMinutes().toString().padStart(2, '0');

        // –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–æ—Ä–º–ª–µ–Ω–∏—è
        const now = new Date();
        const timeDiff = nextFeedingTime.getTime() - now.getTime();
        const hoursDiff = Math.floor(timeDiff / (1000 * 60 * 60));
        const minutesDiff = Math.floor(
            (timeDiff % (1000 * 60 * 60)) / (1000 * 60)
        );

        let timeDiffString = '';
        if (hoursDiff > 0) {
            timeDiffString = `${hoursDiff} —á ${minutesDiff} –º–∏–Ω`;
        } else {
            timeDiffString = `${minutesDiff} –º–∏–Ω`;
        }

        ctx.reply(
            `‚è∞ –°–ª–µ–¥—É—é—â–µ–µ –∫–æ—Ä–º–ª–µ–Ω–∏–µ –≤ ${timeString} (—á–µ—Ä–µ–∑ ${timeDiffString})`
        );
    } catch (error) {
        console.error(
            '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–æ—Ä–º–ª–µ–Ω–∏—è:',
            error
        );
        ctx.reply(
            '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–æ—Ä–º–ª–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'
        );
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–°–æ–±–∞—á–∫–∞ –ø–æ–µ–ª"
mainScene.hears(/üçΩÔ∏è –°–æ–±–∞—á–∫–∞ –ø–æ–µ–ª/, async ctx => {
    try {
        if (!globalTimerService || !globalDatabase) {
            ctx.reply(
                '–û—à–∏–±–∫–∞: —Å–µ—Ä–≤–∏—Å—ã –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start'
            );
            return;
        }

        // –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        let dbUser = await globalDatabase.getUserByTelegramId(ctx.from!.id);
        if (!dbUser) {
            dbUser = await globalDatabase.createUser(
                ctx.from!.id,
                ctx.from!.username || ctx.from!.first_name
            );
        }

        // –¢–∞–∫–∂–µ —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å—Ç–∞—Ä–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Ç–∞–π–º–µ—Ä–∞–º–∏
        const user = await getOrCreateUser(
            ctx.from!.id,
            ctx.from!.username || ctx.from!.first_name
        );

        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ—Ä–º–∞ –∏–∑ –ë–î
        const foodType =
            (await globalDatabase.getSetting('default_food_type')) || 'dry';
        const foodAmount = parseInt(
            (await globalDatabase.getSetting('default_food_amount')) || '12'
        );

        // –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –æ –∫–æ—Ä–º–ª–µ–Ω–∏–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å —Ç–µ–∫—É—â–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
        const dbFeeding = await globalDatabase.createFeeding(
            dbUser.id,
            foodType,
            foodAmount
        );

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∫–æ—Ä–º–ª–µ–Ω–∏—è –≤ —Å–µ—Å—Å–∏–∏ –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π
        if (!ctx.session) {
            ctx.session = {};
        }
        ctx.session.lastFeedingId = dbFeeding.id;

        // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ —Å—Ç–∞—Ä–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Ç–∞–π–º–µ—Ä–∞–º–∏
        const feeding: Feeding = {
            id: dbFeeding.id,
            userId: user.id,
            timestamp: dbFeeding.timestamp,
            foodType: dbFeeding.foodType,
            amount: dbFeeding.amount,
        };

        // –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–µ –∫–æ—Ä–º–ª–µ–Ω–∏–µ
        globalTimerService.startFeedingTimer();

        // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–ª–µ–¥—É—é—â–µ–º –∫–æ—Ä–º–ª–µ–Ω–∏–∏
        const nextFeedingInfo = globalTimerService.getNextFeedingInfo();

        // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
        const intervalMinutes = nextFeedingInfo.intervalMinutes;
        let intervalText = '';
        if (intervalMinutes < 60) {
            intervalText = `${intervalMinutes} –º–∏–Ω`;
        } else {
            const hours = Math.floor(intervalMinutes / 60);
            const remainingMinutes = intervalMinutes % 60;
            if (remainingMinutes === 0) {
                intervalText = `${hours} —á`;
            } else {
                intervalText = `${hours} —á ${remainingMinutes} –º–∏–Ω`;
            }
        }

        // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ—Ä–º–µ
        const foodInfo = `${foodAmount}–≥ ${foodType === 'dry' ? '—Å—É—Ö–æ–≥–æ' : '–≤–ª–∞–∂–Ω–æ–≥–æ'} –∫–æ—Ä–º–∞`;

        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const message =
            `üçΩÔ∏è –°–æ–±–∞—á–∫–∞ –≤–∫—É—Å–Ω–æ –ø–æ–µ–ª!\n\n` +
            `${formatDateTime(dbFeeding.timestamp, dbUser?.timezone).replace(', ', ' –≤ ')}\n` +
            `${createUserLink(dbUser)} –¥–∞–ª ${foodInfo}\n\n` +
            `‚è∞ –°–ª–µ–¥—É—é—â–µ–µ –∫–æ—Ä–º–ª–µ–Ω–∏–µ –≤ ${nextFeedingInfo.time ? formatDateTime(nextFeedingInfo.time, dbUser?.timezone).split(' –≤ ')[1] : '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} (—á–µ—Ä–µ–∑ ${intervalText})`;

        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        const allUsers = await globalDatabase.getAllUsers();
        for (const u of allUsers) {
            // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ç–∞–∫ –∫–∞–∫ –µ–º—É –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –æ—Ç–¥–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            if (u.telegramId === ctx.from!.id) {
                continue;
            }

            if (u.notificationsEnabled) {
                try {
                    await ctx.telegram.sendMessage(u.telegramId, message);
                } catch (error) {
                    console.error(
                        `–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${u.telegramId}:`,
                        error
                    );
                }
            }
        }

        console.log(
            `–ö–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∞–Ω–æ –≤ –ë–î: ${dbUser.username} –≤ ${dbFeeding.timestamp}`
        );

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –∫–æ—Ä–º–ª–µ–Ω–∏–∏ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        await ctx.reply(message, getMainKeyboard(true));
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ—Ä–º–ª–µ–Ω–∏—è:', error);
        ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –∫–æ—Ä–º–ª–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ó–∞–≤–µ—Ä—à–∏—Ç—å –∫–æ—Ä–º–ª–µ–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è"
mainScene.hears(/‚èπÔ∏è –ó–∞–≤–µ—Ä—à–∏—Ç—å –∫–æ—Ä–º–ª–µ–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è/, async ctx => {
    try {
        if (!globalTimerService || !globalDatabase) {
            ctx.reply(
                '–û—à–∏–±–∫–∞: —Å–µ—Ä–≤–∏—Å—ã –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start'
            );
            return;
        }

        const user = await getOrCreateUser(
            ctx.from!.id,
            ctx.from!.username || ctx.from!.first_name
        );

        globalTimerService.stopAllTimers();

        // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É DatabaseUser
        const dbUser = {
            id: user.id,
            telegramId: user.telegramId,
            username: user.username,
            notificationsEnabled: user.notificationsEnabled,
            feedingInterval: user.feedingInterval || 210, // –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            createdAt: new Date(),
        };

        const message =
            `${MESSAGES.FEEDINGS_STOPPED}\n` +
            `–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä: ${createUserLink(dbUser)}\n\n` +
            `–ß—Ç–æ–±—ã –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –∫–æ—Ä–º–ª–µ–Ω–∏—è, –Ω–∞–∂–º–∏—Ç–µ "üçΩÔ∏è –°–æ–±–∞—á–∫–∞ –ø–æ–µ–ª"`;

        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        const allUsers = await globalDatabase.getAllUsers();
        for (const u of allUsers) {
            if (u.notificationsEnabled) {
                try {
                    await ctx.telegram.sendMessage(u.telegramId, message);
                } catch (error) {
                    console.error(
                        `–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${u.telegramId}:`,
                        error
                    );
                }
            }
        }

        console.log(`–ö–æ—Ä–º–ª–µ–Ω–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: ${user.username}`);

        // –û—Å—Ç–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ
        ctx.reply('–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω', getMainKeyboard());
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ—Ä–º–ª–µ–Ω–∏–π:', error);
        ctx.reply(
            '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ—Ä–º–ª–µ–Ω–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'
        );
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /status
mainScene.command('status', async ctx => {
    try {
        if (!globalTimerService || !globalDatabase) {
            ctx.reply(
                '–û—à–∏–±–∫–∞: —Å–µ—Ä–≤–∏—Å—ã –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start'
            );
            return;
        }

        const nextFeeding = globalTimerService.getNextFeedingInfo();
        const lastFeeding = await globalDatabase.getLastFeeding();
        const stats = await globalDatabase.getStats();

        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const currentUser = await globalDatabase.getUserByTelegramId(
            ctx.from!.id
        );

        let message = 'üìä –°—Ç–∞—Ç—É—Å –∫–æ—Ä–º–ª–µ–Ω–∏—è:\n\n';

        if (lastFeeding) {
            const lastUser = await globalDatabase.getUserById(
                lastFeeding.userId
            );
            const username = createUserLink(lastUser);
            message += `üçΩÔ∏è –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∫–æ—Ä–º–ª–µ–Ω–∏–µ:\n`;
            message += `   –í—Ä–µ–º—è: ${formatDateTime(lastFeeding.timestamp, lastUser?.timezone)}\n`;
            message += `   –ö—Ç–æ: ${username}\n\n`;
        } else {
            message += `üçΩÔ∏è –ö–æ—Ä–º–ª–µ–Ω–∏–π –µ—â–µ –Ω–µ –±—ã–ª–æ\n\n`;
        }

        // –ü—Ä–æ—Å—Ç–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
        const intervalMinutes = nextFeeding.intervalMinutes;
        let intervalText = '';
        if (intervalMinutes < 60) {
            intervalText = `${intervalMinutes} –º–∏–Ω`;
        } else {
            const hours = Math.floor(intervalMinutes / 60);
            const remainingMinutes = intervalMinutes % 60;
            if (remainingMinutes === 0) {
                intervalText = `${hours} —á`;
            } else {
                intervalText = `${hours} —á ${remainingMinutes} –º–∏–Ω`;
            }
        }

        message += `‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª –∫–æ—Ä–º–ª–µ–Ω–∏—è: ${intervalText}\n\n`;

        if (nextFeeding.isActive && nextFeeding.time) {
            message += `‚è∞ –°–ª–µ–¥—É—é—â–µ–µ –∫–æ—Ä–º–ª–µ–Ω–∏–µ –≤ ${formatDateTime(nextFeeding.time, currentUser?.timezone)}\n\n`;
        } else {
            message += '‚èπÔ∏è –ö–æ—Ä–º–ª–µ–Ω–∏—è –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã\n\n';
        }

        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        message += `üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n`;
        message += `   üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${stats.totalUsers}\n`;
        message += `   üçΩÔ∏è –ö–æ—Ä–º–ª–µ–Ω–∏–π —Å–µ–≥–æ–¥–Ω—è: ${stats.todayFeedings}\n`;
        message += `   üìà –í—Å–µ–≥–æ –∫–æ—Ä–º–ª–µ–Ω–∏–π: ${stats.totalFeedings}`;

        ctx.reply(message);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /status:', error);
        ctx.reply('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /home
mainScene.command('home', ctx => {
    ctx.reply('–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω', getMainKeyboard());
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–£—Ç–æ—á–Ω–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∫–æ—Ä–º–ª–µ–Ω–∏—è"
mainScene.hears(/üìù –£—Ç–æ—á–Ω–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∫–æ—Ä–º–ª–µ–Ω–∏—è/, ctx => {
    ctx.scene.enter(SCENES.FEEDING_DETAILS);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞ –≥–ª–∞–≤–Ω—É—é"
mainScene.hears(/üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é/, ctx => {
    ctx.scene.enter(SCENES.MAIN);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ (–Ω–æ –Ω–µ –∫–æ–º–∞–Ω–¥, –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö—Å—è —Å /)
mainScene.on('text', ctx => {
    const text = ctx.message.text;
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å /
    if (text.startsWith('/')) {
        return;
    }
    ctx.reply(MESSAGES.UNKNOWN_COMMAND, getMainKeyboard());
});

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ getOrCreateUser
export { getOrCreateUser };
