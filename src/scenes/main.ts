import { Scenes, Markup } from 'telegraf';
import { BotContext, User, Feeding } from '../types';
import { DatabaseService } from '../services/database';
import { getMainKeyboard } from '../utils/keyboards';
import { MESSAGES, SCENES } from '../utils/constants';

export const mainScene = new Scenes.BaseScene<BotContext>(SCENES.MAIN);

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä–≤–∏—Å–∞–º (–±—É–¥—É—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏–∑ bot.ts)
let globalTimerService: any = null;
let globalDatabase: DatabaseService | null = null;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
export function setGlobalServices(timerService: any, database: any) {
  globalTimerService = timerService;
  globalDatabase = database;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
export function setGlobalDatabaseForMain(database: DatabaseService) {
  globalDatabase = database;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function getOrCreateUser(telegramId: number, username?: string): Promise<User> {
  if (!globalDatabase) {
    throw new Error('Database –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
  }
  
  let user = await globalDatabase.getUserByTelegramId(telegramId);

  if (!user) {
    user = await globalDatabase.createUser(telegramId, username);
    console.log(`–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${username || telegramId}`);
  }

  return {
    id: user.id,
    telegramId: user.telegramId,
    username: user.username,
    notificationsEnabled: user.notificationsEnabled
  };
}

// –í—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω—É—é —Å—Ü–µ–Ω—É
mainScene.enter((ctx) => {
  ctx.reply(MESSAGES.WELCOME, getMainKeyboard());
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–Ø –ø–æ–∫–æ—Ä–º–∏–ª"
mainScene.hears(/üçΩÔ∏è –Ø –ø–æ–∫–æ—Ä–º–∏–ª/, async (ctx) => {
  try {
    if (!globalTimerService || !globalDatabase) {
      ctx.reply('–û—à–∏–±–∫–∞: —Å–µ—Ä–≤–∏—Å—ã –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start');
      return;
    }

    // –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    let dbUser = await globalDatabase.getUserByTelegramId(ctx.from!.id);
    if (!dbUser) {
      dbUser = await globalDatabase.createUser(
        ctx.from!.id,
        ctx.from!.username || ctx.from!.first_name
      );
    }

    // –¢–∞–∫–∂–µ —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å—Ç–∞—Ä–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Ç–∞–π–º–µ—Ä–∞–º–∏
    const user = await getOrCreateUser(
      ctx.from!.id,
      ctx.from!.username || ctx.from!.first_name
    );

    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ—Ä–º–∞ –∏–∑ –ë–î
    const foodType = await globalDatabase.getSetting('default_food_type') || 'dry';
    const foodAmount = parseInt(await globalDatabase.getSetting('default_food_amount') || '12');

    // –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –æ –∫–æ—Ä–º–ª–µ–Ω–∏–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å —Ç–µ–∫—É—â–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    const dbFeeding = await globalDatabase.createFeeding(dbUser.id, foodType, foodAmount);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∫–æ—Ä–º–ª–µ–Ω–∏—è –≤ —Å–µ—Å—Å–∏–∏ –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π
    if (!ctx.session) {
      ctx.session = {};
    }
    ctx.session.lastFeedingId = dbFeeding.id;

    // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ —Å—Ç–∞—Ä–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Ç–∞–π–º–µ—Ä–∞–º–∏
    const feeding: Feeding = {
      id: dbFeeding.id,
      userId: user.id,
      timestamp: dbFeeding.timestamp,
      foodType: dbFeeding.foodType,
      amount: dbFeeding.amount
    };

    // –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–µ –∫–æ—Ä–º–ª–µ–Ω–∏–µ
    globalTimerService.startFeedingTimer();

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–ª–µ–¥—É—é—â–µ–º –∫–æ—Ä–º–ª–µ–Ω–∏–∏
    const nextFeedingInfo = globalTimerService.getNextFeedingInfo();
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
    const intervalMinutes = nextFeedingInfo.intervalMinutes;
    let intervalText = '';
    if (intervalMinutes < 60) {
      intervalText = `${intervalMinutes} –º–∏–Ω`;
    } else {
      const hours = Math.floor(intervalMinutes / 60);
      const remainingMinutes = intervalMinutes % 60;
      if (remainingMinutes === 0) {
        intervalText = `${hours} —á`;
      } else {
        intervalText = `${hours} —á ${remainingMinutes} –º–∏–Ω`;
      }
    }

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ—Ä–º–µ
    const foodInfo = `${foodAmount}–≥ ${foodType === 'dry' ? '—Å—É—Ö–æ–≥–æ' : '–≤–ª–∞–∂–Ω–æ–≥–æ'} –∫–æ—Ä–º–∞`;

    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const message = `${MESSAGES.FEEDING_COMPLETED}\n` +
      `–í—Ä–µ–º—è: ${dbFeeding.timestamp.toLocaleString('ru-RU')}\n` +
      `–ö—Ç–æ: ${dbUser.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}\n` +
      `–ö–æ—Ä–º: ${foodInfo}\n\n` +
      `‚è∞ –°–ª–µ–¥—É—é—â–µ–µ –∫–æ—Ä–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ ${intervalText}`;

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    const allUsers = await globalDatabase.getAllUsers();
    for (const u of allUsers) {
      if (u.notificationsEnabled) {
        try {
          await ctx.telegram.sendMessage(u.telegramId, message);
        } catch (error) {
          console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${u.telegramId}:`, error);
        }
      }
    }

    console.log(`–ö–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∞–Ω–æ –≤ –ë–î: ${dbUser.username} –≤ ${dbFeeding.timestamp}`);

    // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å—Ü–µ–Ω–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∫–æ—Ä–º–ª–µ–Ω–∏—è
    await ctx.scene.enter(SCENES.FEEDING_SUCCESS);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ—Ä–º–ª–µ–Ω–∏—è:', error);
    ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –∫–æ—Ä–º–ª–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ó–∞–≤–µ—Ä—à–∏—Ç—å –∫–æ—Ä–º–ª–µ–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è"
mainScene.hears(/‚èπÔ∏è –ó–∞–≤–µ—Ä—à–∏—Ç—å –∫–æ—Ä–º–ª–µ–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è/, async (ctx) => {
  try {
    if (!globalTimerService || !globalDatabase) {
      ctx.reply('–û—à–∏–±–∫–∞: —Å–µ—Ä–≤–∏—Å—ã –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start');
      return;
    }

    const user = await getOrCreateUser(
      ctx.from!.id,
      ctx.from!.username || ctx.from!.first_name
    );

    globalTimerService.stopAllTimers();

    const message = `${MESSAGES.FEEDINGS_STOPPED}\n` +
      `–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä: ${user.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}\n\n` +
      `–ß—Ç–æ–±—ã –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –∫–æ—Ä–º–ª–µ–Ω–∏—è, –Ω–∞–∂–º–∏—Ç–µ "üçΩÔ∏è –Ø –ø–æ–∫–æ—Ä–º–∏–ª"`;

    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    const allUsers = await globalDatabase.getAllUsers();
    for (const u of allUsers) {
      if (u.notificationsEnabled) {
        try {
          await ctx.telegram.sendMessage(u.telegramId, message);
        } catch (error) {
          console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${u.telegramId}:`, error);
        }
      }
    }

    console.log(`–ö–æ—Ä–º–ª–µ–Ω–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: ${user.username}`);
    
    // –û—Å—Ç–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ
    ctx.reply('–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω', getMainKeyboard());
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ—Ä–º–ª–µ–Ω–∏–π:', error);
    ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ—Ä–º–ª–µ–Ω–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
mainScene.hears(/‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏/, (ctx) => {
  ctx.scene.enter(SCENES.SETTINGS);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º"
mainScene.hears(/üìÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º/, (ctx) => {
  // –°–æ–∑–¥–∞–µ–º —Å—Ü–µ–Ω—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º —Å –∫–Ω–æ–ø–∫–∞–º–∏
  ctx.reply(
    'üìÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –∫–æ—Ä–º–ª–µ–Ω–∏–π\n\n' +
    '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
    Markup.keyboard([
      ['üìÖ –°–æ–∑–¥–∞—Ç—å –∫–æ—Ä–º–ª–µ–Ω–∏–µ –Ω–∞ –≤—Ä–µ–º—è'],
      ['üìã –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ'],
      ['‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –≤—Å–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ'],
      ['üè† –í—ã–π—Ç–∏ –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω']
    ]).resize()
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥–∫–Ω–æ–ø–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º
mainScene.hears(/üìÖ –°–æ–∑–¥–∞—Ç—å –∫–æ—Ä–º–ª–µ–Ω–∏–µ –Ω–∞ –≤—Ä–µ–º—è/, (ctx) => {
  ctx.scene.enter(SCENES.SCHEDULE_FEEDING);
});

mainScene.hears(/üìã –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ/, (ctx) => {
  ctx.scene.enter(SCENES.SCHEDULED_LIST);
});

mainScene.hears(/‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –≤—Å–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ/, async (ctx) => {
  // –≠—Ç–æ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –≤ –Ω–æ–≤–æ–π —Å—Ü–µ–Ω–µ, –Ω–æ –¥–æ–±–∞–≤–∏–º –ø—Ä–æ—Å—Ç—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
  ctx.scene.enter(SCENES.SCHEDULED_LIST);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ò—Å—Ç–æ—Ä–∏—è –∫–æ—Ä–º–ª–µ–Ω–∏–π"
mainScene.hears(/üìã –ò—Å—Ç–æ—Ä–∏—è –∫–æ—Ä–º–ª–µ–Ω–∏–π/, (ctx) => {
  ctx.scene.enter(SCENES.HISTORY);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /status
mainScene.command('status', async (ctx) => {
  try {
    if (!globalTimerService || !globalDatabase) {
      ctx.reply('–û—à–∏–±–∫–∞: —Å–µ—Ä–≤–∏—Å—ã –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start');
      return;
    }

    const nextFeeding = globalTimerService.getNextFeedingInfo();
    const lastFeeding = await globalDatabase.getLastFeeding();
    const stats = await globalDatabase.getStats();
    
    let message = 'üìä –°—Ç–∞—Ç—É—Å –∫–æ—Ä–º–ª–µ–Ω–∏—è:\n\n';
    
    if (lastFeeding) {
      const lastUser = await globalDatabase.getUserById(lastFeeding.userId);
      message += `üçΩÔ∏è –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∫–æ—Ä–º–ª–µ–Ω–∏–µ:\n`;
      message += `   –í—Ä–µ–º—è: ${lastFeeding.timestamp.toLocaleString('ru-RU')}\n`;
      message += `   –ö—Ç–æ: ${lastUser?.username || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}\n\n`;
    } else {
      message += `üçΩÔ∏è –ö–æ—Ä–º–ª–µ–Ω–∏–π –µ—â–µ –Ω–µ –±—ã–ª–æ\n\n`;
    }
    
    // –ü—Ä–æ—Å—Ç–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
    const intervalMinutes = nextFeeding.intervalMinutes;
    let intervalText = '';
    if (intervalMinutes < 60) {
      intervalText = `${intervalMinutes} –º–∏–Ω`;
    } else {
      const hours = Math.floor(intervalMinutes / 60);
      const remainingMinutes = intervalMinutes % 60;
      if (remainingMinutes === 0) {
        intervalText = `${hours} —á`;
      } else {
        intervalText = `${hours} —á ${remainingMinutes} –º–∏–Ω`;
      }
    }
    
    message += `‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª –∫–æ—Ä–º–ª–µ–Ω–∏—è: ${intervalText}\n\n`;
    
    if (nextFeeding.isActive && nextFeeding.time) {
      message += `‚è∞ –°–ª–µ–¥—É—é—â–µ–µ –∫–æ—Ä–º–ª–µ–Ω–∏–µ: ${nextFeeding.time.toLocaleString('ru-RU')}\n\n`;
    } else {
      message += '‚èπÔ∏è –ö–æ—Ä–º–ª–µ–Ω–∏—è –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã\n\n';
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    message += `üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n`;
    message += `   üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${stats.totalUsers}\n`;
    message += `   üçΩÔ∏è –ö–æ—Ä–º–ª–µ–Ω–∏–π —Å–µ–≥–æ–¥–Ω—è: ${stats.todayFeedings}\n`;
    message += `   üìà –í—Å–µ–≥–æ –∫–æ—Ä–º–ª–µ–Ω–∏–π: ${stats.totalFeedings}`;
    
    ctx.reply(message);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /status:', error);
    ctx.reply('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /home
mainScene.command('home', (ctx) => {
  ctx.reply(MESSAGES.WELCOME, getMainKeyboard());
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ (–Ω–æ –Ω–µ –∫–æ–º–∞–Ω–¥, –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö—Å—è —Å /)
mainScene.on('text', (ctx) => {
  const text = ctx.message.text;
  // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å /
  if (text.startsWith('/')) {
    return;
  }
  ctx.reply(MESSAGES.UNKNOWN_COMMAND, getMainKeyboard());
});


