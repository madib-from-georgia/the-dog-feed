import { Scenes, Markup } from 'telegraf';
import { BotContext } from '../types';
import { DatabaseService } from '../services/database';
import { SCENES } from '../utils/constants';

export const foodTypeSettingsScene = new Scenes.BaseScene<BotContext>(SCENES.FOOD_TYPE_SETTINGS);

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
let globalDatabase: DatabaseService | null = null;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
export function setGlobalDatabaseForFoodTypeSettings(database: DatabaseService) {
  globalDatabase = database;
}

// –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫–æ—Ä–º–∞
foodTypeSettingsScene.enter(async (ctx) => {
  try {
    if (!globalDatabase) {
      ctx.reply('–û—à–∏–±–∫–∞: –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start');
      return;
    }

    const currentType = await globalDatabase.getSetting('default_food_type') || 'dry';
    const currentTypeText = currentType === 'dry' ? '–°—É—Ö–æ–π' : '–í–ª–∞–∂–Ω—ã–π';
    
    const message = `ü•ò –í—ã–±–æ—Ä —Ç–∏–ø–∞ –∫–æ—Ä–º–∞\n\n` +
      `–¢–µ–∫—É—â–∏–π —Ç–∏–ø: ${currentTypeText}\n\n` +
      `–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–∏–ø –∫–æ—Ä–º–∞:`;

    ctx.reply(message, Markup.keyboard([
      ['üåæ –°—É—Ö–æ–π', 'ü•´ –í–ª–∞–∂–Ω—ã–π'],
      ['üçΩÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ—Ä–º–∞', 'üè† –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω']
    ]).resize());

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–∏–ø–∞ –∫–æ—Ä–º–∞:', error);
    ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ "–°—É—Ö–æ–π"
foodTypeSettingsScene.hears(/üåæ –°—É—Ö–æ–π/, async (ctx) => {
  try {
    if (!globalDatabase) {
      ctx.reply('–û—à–∏–±–∫–∞: –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
      return;
    }

    await globalDatabase.setSetting('default_food_type', 'dry');
    
    const user = await globalDatabase.getUserByTelegramId(ctx.from!.id);
    
    const message = `‚úÖ –¢–∏–ø –∫–æ—Ä–º–∞ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ "–°—É—Ö–æ–π"\n\n` +
      `–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω—è—Ç—Å—è –∫ —Å–ª–µ–¥—É—é—â–∏–º –∫–æ—Ä–º–ª–µ–Ω–∏—è–º.\n` +
      `–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä: ${user?.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}`;

    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏
    const allUsers = await globalDatabase.getAllUsers();
    for (const u of allUsers) {
      if (u.notificationsEnabled) {
        try {
          await ctx.telegram.sendMessage(u.telegramId, `üåæ ${message}`);
        } catch (error) {
          console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${u.telegramId}:`, error);
        }
      }
    }

    console.log(`–¢–∏–ø –∫–æ—Ä–º–∞ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ "dry" –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${user?.username}`);
    
    // –í–æ–∑–≤—Ä–∞—Ç –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –∫–æ—Ä–º–∞
    setTimeout(() => {
      ctx.scene.enter(SCENES.FOOD_SETTINGS);
    }, 1500);

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–∏–ø–∞ –∫–æ—Ä–º–∞:', error);
    ctx.reply('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ "–í–ª–∞–∂–Ω—ã–π"
foodTypeSettingsScene.hears(/ü•´ –í–ª–∞–∂–Ω—ã–π/, async (ctx) => {
  try {
    if (!globalDatabase) {
      ctx.reply('–û—à–∏–±–∫–∞: –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
      return;
    }

    await globalDatabase.setSetting('default_food_type', 'wet');
    
    const user = await globalDatabase.getUserByTelegramId(ctx.from!.id);
    
    const message = `‚úÖ –¢–∏–ø –∫–æ—Ä–º–∞ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ "–í–ª–∞–∂–Ω—ã–π"\n\n` +
      `–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω—è—Ç—Å—è –∫ —Å–ª–µ–¥—É—é—â–∏–º –∫–æ—Ä–º–ª–µ–Ω–∏—è–º.\n` +
      `–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä: ${user?.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}`;

    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏
    const allUsers = await globalDatabase.getAllUsers();
    for (const u of allUsers) {
      if (u.notificationsEnabled) {
        try {
          await ctx.telegram.sendMessage(u.telegramId, `ü•´ ${message}`);
        } catch (error) {
          console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${u.telegramId}:`, error);
        }
      }
    }

    console.log(`–¢–∏–ø –∫–æ—Ä–º–∞ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ "wet" –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${user?.username}`);
    
    // –í–æ–∑–≤—Ä–∞—Ç –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –∫–æ—Ä–º–∞
    setTimeout(() => {
      ctx.scene.enter(SCENES.FOOD_SETTINGS);
    }, 1500);

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–∏–ø–∞ –∫–æ—Ä–º–∞:', error);
    ctx.reply('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ—Ä–º–∞"
foodTypeSettingsScene.hears(/üçΩÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ—Ä–º–∞/, (ctx) => {
  ctx.scene.enter(SCENES.FOOD_SETTINGS);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω"
foodTypeSettingsScene.hears(/üè† –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω/, (ctx) => {
  ctx.scene.enter(SCENES.MAIN);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
foodTypeSettingsScene.on('text', (ctx) => {
  ctx.reply(
    '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–æ—Ä–º–∞ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.',
    Markup.keyboard([
      ['üåæ –°—É—Ö–æ–π', 'ü•´ –í–ª–∞–∂–Ω—ã–π'],
      ['üçΩÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ—Ä–º–∞', 'üè† –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω']
    ]).resize()
  );
}); 